@ 
\section{Tri bulle g\'en\'erique}
\paragraph{Tri Bulle.}
Le tri bulle consiste \`a parcourir la table \`a trier en
intervertissant toute paire d'\'el\'ements cons\'ecutifs non
ordonn\'es afin qu'apr\`es un parcours, le plus grand \'el\'ement se
retrouve \`a la fin de la table. On recommence cette op\'eration avec
la table consid\'er\'ee sans le dernier \'el\'ements.
\paragraph{Questions.}
\begin{enumerate}
\item Donnez la d\'efinition de la fonction de prototype~:
\begin{verbatim}
void TriBulle(int *,int) ;
\end{verbatim}
  qui tri --- de mani\`ere destructive --- un tableau d'entiers
  pass\'e en premiers param\`etre et dont la taille est pass\'ee en
  second param\`etre.
\item Donnez la d\'efinition de la fonction de prototype~:
\begin{verbatim}
void TriBulleGenerique (void *tab,int tabsize, int cellsize, int (*compar)(void*, void *)) ;
\end{verbatim}
  qui tri --- de mani\`ere destructive --- un tableau dont l'origine
  est 
  pass\'ee en premiers param\`etre, la taille en
  second param\`etre, la taille (en octet) de chacune de ces cellules en
  troisi\`eme et une fonction de comparaison de cellule en dernier.
\end{enumerate}
\ifcorrection%
\begin{correction}
  La premi\`ere question n'est que la r\'ep\'etition de la seconde. On
  va  traiter les deux dans l'ordre~:
<<*>>=
<<Tri bulle d'un tableau d'entiers>>
<<Tri bulle g\'en\'erique>>
@ %def
 \begin{enumerate}
@ 
\item Ce tri est un grand classique.
<<Tri bulle d'un tableau d'entiers>>=
void 
TriBulle
(int *tab,int tabsize)
{
  int i ;
  int tmp ;
  for(tabsize--;tabsize;tabsize--)
    for(i=0;i<tabsize;i++)
      if(tab[i]>tab[i+1])
         {
           tmp=tab[i] ;
           tab[i] = tab[i+1] ;
           tab[i+1] = tmp ;
         }
  return ;         
}
@ %def
@ 
\item La version g\'en\'erique est une simple adaptation~:
<<Tri bulle g\'en\'erique>>=
#define CHOOSECELL(a,b,c) (((char *) a)+(b)*cellsize+(c))
void 
TriBulleGenerique 
(void *tab,int tabsize, int cellsize, int (*compar)(void *, void *)) 
{
  int i,j ;
  char tmp ;
  for(tabsize--;tabsize;tabsize--)
    for(i=0;i<tabsize;i++)
      if( compar((void *) CHOOSECELL(tab,i,0),(void *) CHOOSECELL(tab,i+1,0)))
           for(j=0;j<cellsize;j++)
           {
             tmp= * CHOOSECELL(tab,i,j) ;
             * CHOOSECELL(tab,i,j) = * CHOOSECELL(tab,i+1,j) ;
             * CHOOSECELL(tab,i+1,j) = tmp ;
           }
  return ;         
}
@ %def 
\end{enumerate}

\end{correction}
\fi%
