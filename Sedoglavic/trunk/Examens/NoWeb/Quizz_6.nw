\ifcorrection%
\subsection*{\'Enonc\'e}%
\fi%
Donnez la d\'efinition de la fonction de prototype
\begin{verbatim}
int RetourneMin_et_IncrementeMax (int tab[], int size) ;
\end{verbatim}
 qui recherche et incr\'emente --- dans l'espace m\'emoire d'origine
 --- la valeur maximale d'un tableau \texttt{tab} de
 taille~\texttt{size}~; de plus, cette fonction doit retourner la
 valeur minimale du tableau.
\par\medskip
\textbf{Remarque~:} cette fonction ne v\'erifie pas la pertinence de ces
param\`etres (ne teste pas que \verb+size+ est positif ou que l'adresse
\verb+tab+ est non nulle.
\ifcorrection
\begin{correction}
\subsection*{Proposition de correction}%
\input{Verbatim/Quizz_6.c.verb}
\subsection*{D\'etails de cette correction}%
Nous allons compl\'eter le squelette suivant~:
@ 
<<*>>=
<<Ent\^ete>>
{
<<D\'eclarationVariablesAutomatiques>>
<<D\'eterminationDesExtrema>>
<<Incr\'ementationDuMaximum>>
<<ValeurDeRetour>>
}
@ %def 

@ 
L'ent\^ete de notre fonction est donn\'ee dans l'\'enonc\'e~:
<<Ent\^ete>>=
int 
RetourneMin_et_IncrementeMax
(int tab[], int size) 
@ %def 

@ 
Comme nous allons chercher un maximum et un minimum, nous 
pouvons d\'eclarer deux indices
<<D\'eclarationVariablesAutomatiques>>=
int min ;
int max ;
@ %def
qui seront ceux de cellules contenant les extrema correspondants.

@ 
De mani\`ere classique, nous allons parcourir notre tableau 
afin de d\'eterminer les extrema. Pour ce faire, nous allons utiliser
un indice de parcour~:
<<D\'eclarationVariablesAutomatiques>>=
int i ;
@ %def 


@ 
Le code suivant~:
<<D\'eterminationDesExtrema>>=
for(max=min=i=0;i<size;i++)
{
  if(tab[min]>tab[i])
    min = i ;
  if(tab[max]<tab[i])
    max = i ;
}
@ %def 
permet de d'initialiser les variables automatiques et
de tenir \`a jour les indices des extrema.

@ 
Ce bout de code permet d\'ej\`a de conna\^\i{}tre la 
valeur de retour~:
<<ValeurDeRetour>>=
return min;
@ %def 

@ 
Il ne reste plus qu'\`a incr\'ementer le maximum (en prenant soin 
du fait qu'il peut y en avoir plusieurs occurences dans le tableau)~:
<<Incr\'ementationDuMaximum>>=
   for(i=0;i<size;i++)
      if(tab[i]==tab[max])
          ++(tab[i]) ;
@ %def 
\end{correction}
\fi
