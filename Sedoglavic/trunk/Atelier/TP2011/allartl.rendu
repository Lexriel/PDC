Pas de readme.

Vous pourriez mettre dans le readme ce que fait votre programme et ce que vous avez implant\'e plut\^ot que de me laisser tout lire pour le deviner.
Donc comme on ne sait pas ce que vous attendez comme specification de votre code, l'utilisateur se construit sa propre specification que votre code a peu de chance de remplir.
Fournir un fichier d'essai que l'on a fait soi-meme est une bonne facon de mettre son travail en valeur.

Des accents dans le code qui rende sa lecture difficile.
Dommage car il y a des commentaires dans le texte (meme si lire des trucs comme
"changement d'etat si le string est cloture" laisse perplexe).

Le make marche bien mais il ne gere pas le nettoyage donc l'utilisateur doit le faire a la main.


Le resultat est plut\^ot pas mal.
	l'indentation est bien prise en compte
	les commentaires sont bien g\'eres.
	les ; sont bien pris en compte mais pas dans le for.

Remarque sur le code

Dans la structure
typedef struct pp_struct
{
    etat etat;
    unsigned int accolades;
} pp_struct;

pourquoi repeter pp_struct deux fois~?
Il y a confusion entre l'identificateur d'un modele et celle d'un type synonyme.

Pourquoi indiquer les parametres argc et argv si vous ne les utilisez pas~?

A chaque lecture d'un caractere vous faite un appel de fonction.
Cela sollicite la pile de maniere trop intensive sans benefice sur la bonne structure du programme.

la valeur de retour du main n'est pas documente. On doit tout lire et tout comprendre pour pouvoir l'utiliser.	

Vous avez fait le choix de regrouper l'analyse des cas d'erreurs dans une fonction a part. C'est pas mal mais il y a des fprintf(stderr dans la fonction qui effectue le pretty printing. Ce n'est pas coherent.

Pour conclure, du bon boulot. N'hesitez pas a etre plus rigoureux puisque vous maitrisez bien le langage.





Les remarques ci-dessus sont sommaires.
L'objectif principale est de vous incitez \`a pers\'ev\'erer en \'enum\'erant ce qui visiblement pose probl\`eme.
Nous pourrons en discuter demain en TP.
Bon courage et bonne continuation.

AS